/* Ferropoly-Game V2.3.4, 08-08-2021, (c) Christian Kuster, CH-8342 Wernetshausen, christian@kusti.ch */

var genericModals={showError:function(title,body,resp,callback){if(_.isFunction(body)&&(resp=body,body=null),_.isFunction(resp)&&(callback=resp,resp=null),resp){if(body+="<br/>Fehlermeldung:<br/>\n",resp.data){var info=resp.data;resp.data.message&&(info=resp.data.message),body+=info+"<br/><br/>"}body+="Status: "+resp.status+", "+resp.statusText+"<br/>\n"}if(callback){var btnError=$("#mod-error-btn");btnError.on("click",function(){btnError.off("click"),callback()})}$("#mod-error-title").text(title),$("#mod-error-body").html(body),$("#modal-error").modal("show"),console.info("Generic error-modal fired!",title,body,resp)},showSuccess:function(title,body,callback){if(_.isFunction(body)&&(callback=body=null),callback){var btnError=$("#mod-success-btn");btnError.on("click",function(){btnError.off("click"),callback()})}$("#mod-success-title").text(title),$("#mod-success-body").html(body),$("#modal-success").modal("show"),console.info("Generic success-modal fired!",title,body)}},panelUpdateHandlers={};function registerPanelUpdateHandler(panel,handler){panelUpdateHandlers[panel]=handler}function showPanel(p){for(var activeCallAlert=$("#active-call"),i=0;i<receptionPanels.length;i++)$(receptionPanels[i]).hide();switch(activeCall.isActive()?activeCallAlert.show():activeCallAlert.hide(),p){case"#panel-teamaccounts":dataStore.updateTeamAccountEntries(void 0,angular.element("#team-accounts-ctrl").scope().refreshTeamAccounts);break;case"#panel-managecall":activeCallAlert.hide();break;case"#panel-stats":angular.element("#ferrostats-ctrl").scope().refresh();break;case"#panel-map":refreshMapPanel();break;case"#panel-main":angular.element("#reception-dashboard").scope().refresh()}panelUpdateHandlers[p]&&panelUpdateHandlers[p](),$(p).show()}$(document).ready(function(){console.log("document ready"),showPanel("#panel-main")});var ferropolySocket,ferropolyApp=angular.module("ferropolyApp",[]);ferropolyApp.filter("offset",function(){return function(input,start){return start=parseInt(start,10),input.slice(start)}}),ferropolyApp.filter("amount",function(){return function(val){return _.isNumber(val)?val.toLocaleString("de-CH"):val}}),(ferropolySocket=io.connect()).on("disconnect",function(){console.log("disconnected"),$("#offline").show(),$("#online").hide()}),ferropolySocket.on("test",function(data){console.log("test: "+data)}),ferropolySocket.on("identify",function(){console.log("identify received"),console.log(ferropoly.authToken),ferropolySocket.emit("identify",{user:ferropoly.user,authToken:ferropoly.authToken,gameId:ferropoly.gameplay.internal.gameId})}),ferropolySocket.on("welcome",function(data){console.log("Welcome Data",data)}),ferropolySocket.on("initialized",function(){console.log("initialized: SOCKET.IO is online"),_.delay(function(){$("#online").show(),$("#offline").hide()},1e3)}),ferropolySocket.on("connection",function(){console.log("socket.io connection event")}),ferropolySocket.on("connect",function(){console.log("socket.io connect event")}),ferropolySocket.on("connect_error",function(obj){console.log("socket.io connect_error event"),console.log(obj)}),ferropolySocket.on("reconnect",function(){console.log("socket.io reconnect event")}),ferropolySocket.on("reconnect_attempt",function(){console.log("socket.io reconnect_attempt event")}),ferropolySocket.on("reconnecting",function(){console.log("socket.io reconnecting event")}),ferropolySocket.on("reconnect_error",function(){console.log("socket.io reconnect_error event")}),ferropolySocket.on("reconnect_failed",function(){console.log("socket.io reconnect_failed event")});var DataStore=function(initData,socket){this.data=initData,this.data.events={},this.socket=socket,this.teamAccountUpdateHandlers=[],this.onPropertiesUpdatedHandlers=[];var self=this;this.teamColors=["blue","brown","darkgreen","gold","red","olive","peru","cyan","indianred","khaki","greenyellow","plum","skyblue","navy","darkred","lightsalmon","lime","fuchsia","indigo","chocolate"],this.socket.on("admin-teamAccount",function(resp){switch(console.log("onTeamAccount: "+resp.cmd),resp.cmd){case"onTransaction":self.data.teamAccountEntries||(self.data.teamAccountEntries={}),self.updateTeamAccountEntries(resp.data.teamId);break;default:console.log("UNHANDLED: "+resp.cmd)}}),this.socket.on("admin-propertyAccount",function(ind){switch(ind.cmd){case"propertyBought":case"buildingBuilt":var i=_.findIndex(self.data.pricelist,{uuid:ind.property.uuid});self.data.pricelist[i]=ind.property,self.onPropertiesUpdatedHandlers.forEach(function(h){h(ind.property)}),console.log("Property account, updated: "+i+"("+ind.cmd+")");break;default:console.log("UNHANDLED: "+ind.cmd)}}),this.socket.on("admin-chancelleryAccount",function(resp){console.log("UNHANDLED: "+resp)}),this.socket.on("admin-properties",function(resp){switch(console.log("onProperties"),console.log(resp),resp.cmd){case"getProperties":console.log("Pricelist updated, properties: "+resp.data.length),self.data.pricelist=resp.data}}),this.socket.on("admin-marketplace",function(info){switch(console.log("onMarketplace: "+info.cmd),console.log(info),info.cmd){case"buyProperty":info.result.property&&self.updatePropertyInPricelist(info.result.property)}})};DataStore.prototype.getGameplay=function(){return this.data.gameplay},DataStore.prototype.isGameActive=function(){var start=moment(this.data.gameplay.scheduling.gameStartTs),end=moment(this.data.gameplay.scheduling.gameEndTs);return moment().isAfter(end)?(console.log("Game over"),!1):!moment().isBefore(start)||(console.log("Game not started yet"),!1)},DataStore.prototype.pushEvent=function(teamId,eventText){this.data.events[teamId]||(this.data.events[teamId]=[]),this.data.events[teamId].push({ts:new Date,message:eventText})},DataStore.prototype.getEvents=function(teamId){return this.data.events[teamId]||(this.data.events[teamId]=[]),this.data.events[teamId]},DataStore.prototype.getAuthToken=function(){return this.data.authToken},DataStore.prototype.updateChancellery=function(callback){var self=this;console.log("update chancellery"),$.getJSON("/chancellery/account/statement/"+this.getGameplay().internal.gameId).done(function(data){self.data.chancelleryEntries=data.entries,callback&&callback()}).fail(function(data){console.log("ERROR when getting chancellery data (2):"),console.log(data),self.data.chancelleryEntries=[],callback&&callback()})},DataStore.prototype.getChancelleryEntries=function(teamId){return teamId?_.filter(this.data.chancelleryEntries,function(n){return n.transaction.origin.uuid===teamId}):this.data.chancelleryEntries},DataStore.prototype.getChancelleryAsset=function(){return _.sumBy(this.data.chancelleryEntries,"transaction.amount")},DataStore.prototype.updateProperties=function(teamId,callback){var self=this;console.log("update pricelist for "+teamId),$.getJSON("/properties/get/"+this.getGameplay().internal.gameId+"/"+teamId).done(function(data){for(var i=0;i<data.properties.length;i++)self.updatePropertyInPricelist(data.properties[i]);callback&&callback()}).fail(function(data){console.log("ERROR when getting properties (2):"),console.log(data),callback&&callback()})},DataStore.prototype.updatePropertyInPricelist=function(property){if(property&&property.uuid){var i=_.findIndex(this.data.pricelist,{uuid:property.uuid});-1<i&&(this.data.pricelist[i]=property)}this.onPropertiesUpdatedHandlers.forEach(function(h){if(h)return h(property);console.warn("Invalid onPropertiesUpdatedHandler")})},DataStore.prototype.getProperties=function(teamId){return teamId?_.filter(this.data.pricelist,function(n){return!!n.gamedata&&n.gamedata.owner===teamId}):this.data.pricelist},DataStore.prototype.getFreeProperties=function(){return _.filter(this.data.pricelist,function(n){return!n.gamedata||!n.gamedata.owner})},DataStore.prototype.searchProperties=function(query,limit){if(console.log('Query: "'+query+'" Limit: '+limit),!query||0===query.length)return[];var items=_.filter(this.data.pricelist,function(p){return-1<p.location.name.toLowerCase().indexOf(query.toLowerCase())});return _.slice(items,0,limit)},DataStore.prototype.getPropertyById=function(propertyId){return _.find(this.data.pricelist,{uuid:propertyId})},DataStore.prototype.getMapCenter=function(){for(var latSum=0,lngSum=0,i=0;i<this.data.pricelist.length;i++)latSum+=parseFloat(this.data.pricelist[i].location.position.lat),lngSum+=parseFloat(this.data.pricelist[i].location.position.lng);return{lat:latSum/this.data.pricelist.length,lng:lngSum/this.data.pricelist.length}},DataStore.prototype.onPropertiesUpdated=function(handler){this.onPropertiesUpdatedHandlers.push(handler)},DataStore.prototype.updatePropertyAccountEntries=function(propertyId){console.log("update property account for "+propertyId),console.warn("There is a todo in updatePropertyAccountEntries: use GET request"),this.socket.emit("admin-propertyAccount",{cmd:"getAccountStatement",propertyId:propertyId})},DataStore.prototype.getPropertyAccountEntries=function(teamId){return teamId?_.filter(this.data.propertyAccountEntries,function(n){return n.transaction.origin.uuid===teamId}):this.data.propertyAccountEntries},DataStore.prototype.getRankingList=function(callback){var self=this;console.log("start query for ranking list"),$.getJSON("/statistics/rankingList/"+this.getGameplay().internal.gameId).done(function(data){for(var i=0;i<data.ranking.length;i++)data.ranking[i].teamName=self.teamIdToTeamName(data.ranking[i].teamId);return self.data.rankingList=data.ranking,callback(null,self.data.rankingList)}).fail(function(error){self.data.rankingList=[],callback(error)})},DataStore.prototype.getIncomeList=function(callback){var self=this;console.log("start query for ranking list"),$.getJSON("/statistics/income/"+this.getGameplay().internal.gameId).done(function(data){for(var i=0;i<data.info.length;i++)data.info[i].teamName=self.teamIdToTeamName(data.info[i].teamId);return self.data.incomeList=data.info,callback(null,self.data.incomeList)}).fail(function(error){self.data.incomeList=[],callback(error)})},DataStore.prototype.getTeams=function(){return this.data.teams},DataStore.prototype.getTeamColor=function(teamId){var index=_.findIndex(this.data.teams,{uuid:teamId});return-1<index&&index<this.teamColors.length?this.teamColors[index]:"black"},DataStore.prototype.teamIdToTeamName=function(teamId){return _.result(_.find(dataStore.getTeams(),{uuid:teamId}),"data.name")},DataStore.prototype.updateTeamAccountEntries=function(teamId,callback){console.log("update team account for "+teamId);var self=this,i=0,query="";_.isFunction(teamId)&&(callback=teamId,teamId=void 0),teamId&&this.data.teamAccountEntries[teamId]&&0<this.data.teamAccountEntries[teamId].length&&(query="?start="+_.last(this.data.teamAccountEntries[teamId]).timestamp),$.getJSON("/teamAccount/get/"+this.getGameplay().internal.gameId+"/"+teamId+query).done(function(data){if(console.log("/teamAccount ok, entries: "+data.accountData.length),teamId){self.data.teamAccountEntries=self.data.teamAccountEntries||{},self.data.teamAccountEntries[teamId]=self.data.teamAccountEntries[teamId]||[];var balance=0<self.data.teamAccountEntries[teamId].length?_.last(self.data.teamAccountEntries[teamId]).balance:0;for(i=0;i<data.accountData.length;i++){var newEntry=data.accountData[i];balance+=newEntry.transaction.amount,newEntry.balance=newEntry.balance||balance,self.data.teamAccountEntries[teamId].push(newEntry)}}else for(self.data.teamAccountEntries={},i=0;i<data.accountData.length;i++){var entry=data.accountData[i];self.data.teamAccountEntries[entry.teamId]||(self.data.teamAccountEntries[entry.teamId]=[]),self.data.teamAccountEntries[entry.teamId].push(entry)}}).fail(function(data){console.error("ERROR when getting accountData (2):"),console.log(data)}).always(function(){for(console.log("updateTeamAccountEntries.always()"),i=0;i<self.teamAccountUpdateHandlers.length;i++)self.teamAccountUpdateHandlers[i]();callback&&callback()})},DataStore.prototype.getTeamAccountEntries=function(teamId){if(console.log("getTeamAccountEntries for: "+teamId),this.data.teamAccountEntries||(this.data.teamAccountEntries={}),teamId)return this.data.teamAccountEntries[teamId];var retVal=[];return _.forIn(this.data.teamAccountEntries,function(value,key){console.log(key),retVal=retVal.concat(value)}),retVal=_.sortBy(retVal,"timestamp")},DataStore.prototype.getTeamAccountBalance=function(teamId){for(var entries=this.getTeamAccountEntries(teamId),balance=0,i=0;i<entries.length;i++)balance+=entries[i].transaction.amount;return balance},DataStore.prototype.registerTeamAccountUpdateHandler=function(handler){this.teamAccountUpdateHandlers.push(handler)},DataStore.prototype.updateTrafficInfo=function(callback){var self=this;$.getJSON("/traffic/"+this.getGameplay().internal.gameId).done(function(data){for(var i=0;i<data.trafficInfo.data.item.length;i++)data.trafficInfo.data.item[i].publishDate=moment(data.trafficInfo.data.item[i].publishDate),data.trafficInfo.data.item[i].duration.from=moment(data.trafficInfo.data.item[i].duration.from),data.trafficInfo.data.item[i].duration.to=moment(data.trafficInfo.data.item[i].duration.to);self.data.trafficInfo=data.trafficInfo,callback&&callback(null,self.data.trafficInfo)}).fail(function(error){self.data.trafficInfo=[],callback(error)})},DataStore.prototype.getTrafficInfo=function(options,callback){function prepareData(){var retVal=self.data.trafficInfo.data.item;options.delay||(retVal=_.filter(retVal,function(n){return"delay"!==n.reason})),options.restriction||(retVal=_.filter(retVal,function(n){return"restriction"!==n.reason})),options.construction||(retVal=_.filter(retVal,function(n){return"construction"!==n.reason})),options.onlyCurrent&&(retVal=_.filter(retVal,function(n){return moment().isAfter(n.duration.from)&&moment().isBefore(n.duration.to)})),options.limit&&(retVal=_.slice(retVal,0,options.limit)),callback(null,retVal)}var self=this;!self.data.trafficInfo||moment().isAfter(self.data.trafficInfo.nextUpdateTime)?self.updateTrafficInfo(function(){prepareData()}):prepareData()},DataStore.prototype.updateTravelLog=function(teamId,callback){console.log("update travel log for "+teamId);var self=this;$.getJSON("/travellog/"+this.getGameplay().internal.gameId+"/"+teamId).done(function(data){if(console.log("/travellog ok"),teamId){self.data.travelLog||(self.data.travelLog=[]),_.remove(self.data.travelLog,function(e){return e.teamId===teamId});for(var i=0;i<data.travelLog.length;i++)self.data.travelLog.push(data.travelLog[i])}else self.data.travelLog=data.travelLog;_.sortBy(self.data.travelLog,function(e){return e.timestamp})}).fail(function(data){console.error("ERROR when getting travelLog (2):"),console.log(data)}).always(function(){console.log("travelLog.always()"),callback&&callback()})},DataStore.prototype.getTravelLog=function(teamId){return console.log("getTravelLog for: "+teamId),this.data.travelLog||(this.data.travelLog=[]),teamId?_.filter(this.data.travelLog,function(n){return n.teamId===teamId}):this.data.travelLog},DataStore.prototype.getTravelLogForProperty=function(propertyId){console.log("getTravelLogForProperty for: "+propertyId),this.data.travelLog||(this.data.travelLog=[]);var propLog=_.filter(this.data.travelLog,function(n){return n.propertyId===propertyId});return _.sortBy(propLog,"timestamp")};var dataStore=new DataStore(ferropoly,ferropolySocket);dataStore.updateProperties();var FerroStats=function(){};FerroStats.prototype.drawRankingChart=function(data,chartId){c3.generate({bindto:"#stats-possessions-chart",size:{height:400},data:{json:data,keys:{x:"teamName",value:["asset"]},axes:{asset:"y"},names:{asset:"Vermögen"},type:"bar",color:function(color,d){return _.isNumber(d.x)?dataStore.getTeamColor(data[d.x].teamId):"blue"}},axis:{x:{type:"category"}},grid:{y:{show:!0}},legend:{show:!1}})},FerroStats.prototype.drawIncomeChart=function(data,chartId){console.log(data),c3.generate({bindto:"#stats-income-chart",size:{height:400},data:{json:data,keys:{x:"teamName",value:["totalAmount"]},axes:{asset:"y"},names:{totalAmount:"Einkommen"},type:"bar",color:function(color,d){return _.isNumber(d.x)?dataStore.getTeamColor(data[d.x].teamId):"blue"}},axis:{x:{type:"category"}},grid:{y:{show:!0}},legend:{show:!1}})},FerroStats.prototype.drawPossessionTimelineChart=function(data,teams){for(var chartData={},i=0;i<teams.length;i++)chartData[teams[i].uuid]={},chartData[teams[i].uuid].ts=[teams[i].uuid+":x"],chartData[teams[i].uuid].values=[teams[i].uuid];for(i=0;i<data.length;i++)chartData[data[i].teamId].ts.push(new Date(data[i].timestamp)),chartData[data[i].teamId].values.push(data[i].balance);var c3Data={xs:{},columns:[],names:{},color:function(color,d){return d.id?dataStore.getTeamColor(d.id):dataStore.getTeamColor(d)},type:"step"};for(i=0;i<teams.length;i++)c3Data.xs[teams[i].uuid]=teams[i].uuid+":x",c3Data.columns.push(chartData[data[i].teamId].ts),c3Data.columns.push(chartData[data[i].teamId].values),c3Data.names[teams[i].uuid]=dataStore.teamIdToTeamName(teams[i].uuid);c3.generate({bindto:"#stats-possession-timeline-chart",size:{height:500},data:c3Data,axis:{x:{type:"timeseries",tick:{format:"%H:%M:%S"}}},grid:{y:{show:!0}},zoom:{enabled:!0},subchart:{show:!0}})},FerroStats.prototype.drawIncomeDetailChart=function(register,chartId){for(var data=[],i=0;i<register.length;i++)data.push([register[i].propertyName,register[i].amount]);c3.generate({bindto:"#stats-income-chart",size:{height:400},data:{columns:data,type:"pie"},legend:{show:!0,position:"inset"}})};var ferroStats=new FerroStats,ActiveCall=function(){this.currentTeam=void 0};ActiveCall.prototype.getCurrentTeam=function(){return this.currentTeam},ActiveCall.prototype.setCurrentTeam=function(team){this.currentTeam=team},ActiveCall.prototype.finish=function(){this.currentTeam=void 0},ActiveCall.prototype.isActive=function(){return void 0!==this.currentTeam};var activeCall=new ActiveCall;function managecallCtrl($scope){$scope.itemsPerPage=6,$scope.currentPage=0,$scope.propertyQuery="",$scope.propertyQueryResult=[],$scope.teams=dataStore.getTeams(),$scope.callPanel=0,$scope.preselectedTeam=void 0,$scope.selectedTeam=activeCall.getCurrentTeam(),$scope.teamInfo={numberOfProperties:0,balance:0,accountEntries:[],properties:[],callLog:[]},$scope.propertyInvestCandidate=void 0,$scope.isGameActive=function(){return dataStore.isGameActive()},$scope.getTeamColor=function(teamId){return dataStore.getTeamColor(teamId)},$scope.getPropertyName=function(log){return log.propertyId?dataStore.getPropertyById(log.propertyId).location.name:log.position.lat+" / "+log.position.lng},$scope.showCallPanel=function(panel){$("#possessions").hide(),$("#buy").hide(),$("#log").hide(),$("#tab-possessions").removeClass("active"),$("#tab-buy").removeClass("active"),$("#tab-log").removeClass("active"),$("#"+panel).show(),$("#tab-"+panel).addClass("active"),"log"===panel&&_.delay(redrawMap,250)},$scope.refreshActiveTeam=function(){return $scope.selectedTeam=activeCall.getCurrentTeam(),$scope.selectedTeam},$scope.refreshAccountInfo=function(team){team||(team=$scope.selectedTeam),dataStore.updateTeamAccountEntries(team.uuid,function(){console.log("update received for teamAccount: "+team.uuid),$scope.teamInfo.balance=dataStore.getTeamAccountBalance(team.uuid),$scope.teamInfo.accountEntries=dataStore.getTeamAccountEntries(team.uuid),$scope.setPage(5e3),$scope.$apply()})},$scope.refreshProperties=function(team){team||(team=$scope.selectedTeam),dataStore.updateProperties(team.uuid,function(){$scope.teamInfo.properties=dataStore.getProperties(team.uuid),console.log("Properties",$scope.teamInfo.properties),dataStore.updateTravelLog(team.uuid,function(){$scope.teamInfo.travelLog=dataStore.getTravelLog(team.uuid),redrawMap(),$scope.$apply()})})},$scope.preselectTeam=function(team){console.log(team.data.name+" / "+team.uuid),$scope.preselectedTeam=team,$scope.callLog=[],$scope.gambleAmount=0,dataStore.updateChancellery(),$scope.refreshProperties(team),$scope.refreshAccountInfo(team)},$scope.confirmTeam=function(playChancellery){console.log("Chancellery: "+playChancellery),activeCall.setCurrentTeam($scope.preselectedTeam),$scope.selectedTeam=$scope.preselectedTeam,$scope.preselectedTeam=void 0,playChancellery?$.getJSON("/chancellery/play/"+dataStore.getGameplay().internal.gameId+"/"+$scope.selectedTeam.uuid).done(function(data){console.log(data);var infoClass="list-group-item-success";data.result.amount<0&&(infoClass="list-group-item-danger"),$scope.callLog.push({class:infoClass,title:data.result.infoText,message:data.result.amount.toLocaleString("de-CH"),ts:new Date}),$scope.callPanel=2,$scope.showCallPanel("buy")}).fail(function(data,status){console.log(data),$scope.callPanel=2,$scope.showCallPanel("buy")}):($scope.callPanel=2,$scope.showCallPanel("buy"))},$scope.finishCall=function(){$scope.callPanel=0,$scope.teamInfo.numberOfProperties=0,$scope.teamInfo.balance=0,$scope.teamInfo.accountEntries=[],$scope.teamInfo.callLog=[],$scope.teamInfo.travelLog=[],$scope.currentPage=0,$scope.propertyQuery="",$scope.propertyQueryResult=[],$scope.selectedTeam=void 0,$scope.preselectedTeam=void 0,activeCall.finish()},$scope.buyHouses=function(){$.post("/marketplace/buildHouses/"+dataStore.getGameplay().internal.gameId+"/"+activeCall.getCurrentTeam().uuid,{authToken:dataStore.getAuthToken()}).done(function(data){var msg;if(console.log(data),0===data.result.amount)msg="Es konnten keine Häuser gebaut werden";else{msg="Belastung: "+data.result.amount.toLocaleString("de-CH")+", Gebaute Häuser: ";for(var i=0;i<data.result.log.length;i++)msg+=data.result.log[i].propertyName+" ("+data.result.log[i].buildingNb+" / "+data.result.log[i].amount.toLocaleString("de-CH")+") "}$scope.callLog.push({class:"list-group-item-success",title:"Hausbau",message:msg,ts:new Date})}).fail(function(data,status){$scope.callLog.push({class:"list-group-item-danger",title:"Hausbau",message:"Fehler: "+status,ts:new Date}),console.log(data)})},$scope.buyHouse=function(property){$.post("/marketplace/buildHouse/"+dataStore.getGameplay().internal.gameId+"/"+activeCall.getCurrentTeam().uuid+"/"+property.uuid,{authToken:dataStore.getAuthToken()}).done(function(data){var msg;console.log(data),property=dataStore.getPropertyById(property.uuid),msg=0===data.result.amount?"In "+property.location.name+" konnte nicht gebaut werden":"Belastung für Hausbau in "+property.location.name+": "+data.result.amount.toLocaleString("de-CH"),$scope.callLog.push({class:"list-group-item-success",title:"Hausbau einzelnes Grundstück",message:msg,ts:new Date})}).fail(function(data,status){$scope.callLog.push({class:"list-group-item-danger",title:"Hausbau",message:"Fehler: "+status,ts:new Date}),console.log(data)})},$scope.gambleAmount=0,$scope.gamble=function(factor){_.isNumber($scope.gambleAmount)&&$.post("/chancellery/gamble/"+dataStore.getGameplay().internal.gameId+"/"+activeCall.getCurrentTeam().uuid,{authToken:dataStore.getAuthToken(),amount:Math.abs($scope.gambleAmount)*factor}).done(function(data){console.log(data);var infoClass="list-group-item-success";data.result.amount<0&&(infoClass="list-group-item-danger"),$scope.callLog.push({class:infoClass,title:data.result.infoText,message:data.result.amount.toLocaleString("de-CH"),ts:new Date})}).fail(function(data,status){$scope.callLog.push({class:"list-group-item-danger",title:"Gambling",message:"Fehler: "+status+" "+data.message,ts:new Date}),console.log(data)})},$scope.prevPage=function(){0<$scope.currentPage&&$scope.currentPage--},$scope.prevPageDisabled=function(){return 0===$scope.currentPage?"disabled":""},$scope.pageCount=function(){return Math.ceil($scope.teamInfo.accountEntries.length/$scope.itemsPerPage)},$scope.nextPage=function(){$scope.currentPage<$scope.pageCount()&&$scope.currentPage++},$scope.nextPageDisabled=function(){return $scope.currentPage===$scope.pageCount()-1?"disabled":""},$scope.setPage=function(n){n<0&&(n=0),n>$scope.pageCount()&&(n=$scope.pageCount()-1),$scope.currentPage=n},$scope.range=function(){var start,ret=[];(start=$scope.currentPage)>$scope.pageCount()-8&&(start=$scope.pageCount()-8),start<0&&(start=0);for(var i=start;i<start+8&&i<$scope.pageCount();i++)ret.push(i);return ret},$scope.runPropertyQuery=function(){$scope.propertyQueryResult=dataStore.searchProperties($scope.propertyQuery,8)},$scope.setPropertyInvestCandidate=function(candidate){$scope.propertyInvestCandidate=candidate},$scope.buyProperty=function(property){property.isBeingBought?console.log("Already buying property, cancel request"):(property.isBeingBought=!0,$.post("/marketplace/buyProperty/"+dataStore.getGameplay().internal.gameId+"/"+activeCall.getCurrentTeam().uuid+"/"+property.uuid,{authToken:dataStore.getAuthToken()}).done(function(data){property.isBeingBought=!1,console.log(data);var msg,res=data.result,infoClass="list-group-item-success",title="Kauf "+res.property.location.name;msg=res.owner?(infoClass="list-group-item-danger","Das Grundstück ist bereits verkauft, Mietzins: "+res.amount.toLocaleString("de-CH")):0===res.amount?(infoClass="list-group-item-info","Das Grundstück gehört der anrufenden Gruppe"):"Grundstück gekauft. Preis: "+res.amount.toLocaleString("de-CH"),$scope.callLog.push({class:infoClass,title:title,message:msg,ts:new Date}),dataStore.updateTravelLog(activeCall.getCurrentTeam().uuid,function(){$scope.teamInfo.travelLog=dataStore.getTravelLog(activeCall.getCurrentTeam().uuid),redrawMap()})}).fail(function(data,status){property.isBeingBought=!1,console.log("ERROR in buyProperty/",data,status),$scope.callLog.push({class:"list-group-item-danger",title:"Grundstückkauf",message:data,ts:new Date})}))};function redrawMap(){var center;$scope.mapApiLoaded()&&(google.maps.event.trigger($scope.map,"resize"),center=0<$scope.teamInfo.travelLog.length?_.last($scope.teamInfo.travelLog).position:dataStore.getMapCenter(),$scope.map.setCenter(new google.maps.LatLng(center.lat,center.lng)),function(){if(!$scope.mapApiLoaded())return;for(var line=[],log=$scope.teamInfo.travelLog,t=0;t<log.length;t++)log[t].position&&line.push(new google.maps.LatLng(log[t].position.lat,log[t].position.lng));var lineOptions={path:line,geodesic:!0,strokeColor:"red",strokeOpacity:1,strokeWeight:2,map:$scope.map};$scope.teamTravelPolyline&&$scope.teamTravelPolyline.setMap(null);$scope.teamTravelPolyline=new google.maps.Polyline(lineOptions)}(),function(){if(!$scope.mapApiLoaded()||0===$scope.teamInfo.travelLog.length)return;$scope.teamCurrentPositionMarker&&$scope.teamCurrentPositionMarker.setMap(null);$scope.teamCurrentPositionMarker=new google.maps.Marker({position:_.last($scope.teamInfo.travelLog).position,map:$scope.map})}(),$scope.propertyMarkers.updateMarkers(),$scope.propertyMarkers.closeAllInfoWindows())}dataStore.registerTeamAccountUpdateHandler(function(){$scope.selectedTeam&&($scope.teamInfo.balance=dataStore.getTeamAccountBalance($scope.selectedTeam.uuid),$scope.teamInfo.accountEntries=dataStore.getTeamAccountEntries($scope.selectedTeam.uuid),$scope.setPage(9999),$scope.$apply())}),ferropolySocket.on("marketplace",function(resp){switch(resp.cmd){case"buyHouses":console.log("Houses built"),console.log(resp)}}),ferropolySocket.on("admin-propertyAccount",function(ind){switch(ind.cmd){case"propertyBought":case"buildingBuilt":$scope.selectedTeam&&ind.property.gamedata.owner===$scope.selectedTeam.uuid&&($scope.teamInfo.properties=dataStore.getProperties($scope.selectedTeam.uuid))}}),$scope.mapFilter="free",$scope.mapApiLoaded=function(){return google&&google.maps},$scope.filterChanged=function(){switch($scope.mapFilter){case"free":$scope.propertyMarkers.setFilter($scope.propertyMarkers.filterFreeProperties);break;case"teamAccount":$scope.propertyMarkers.setTeam(activeCall.getCurrentTeam().uuid),$scope.propertyMarkers.setFilter($scope.propertyMarkers.filterTeamProperties);break;case"all":$scope.propertyMarkers.setFilter($scope.propertyMarkers.filterAllProperties)}$scope.propertyMarkers.updateMarkers()},$scope.focusLogPosition=function(logEntry){$scope.mapApiLoaded()&&($scope.map.setCenter(logEntry.position),$scope.teamLogMarker&&$scope.teamLogMarker.setMap(null),$scope.teamLogAccuracyCircle&&$scope.teamLogAccuracyCircle.setMap(null),$scope.teamLogMarker=new google.maps.Marker({position:logEntry.position,map:$scope.map}),$scope.teamLogAccuracyCircle=new google.maps.Circle({strokeColor:"#0000FF",strokeOpacity:.8,strokeWeight:2,fillColor:"#0000FF",fillOpacity:.35,map:$scope.map,center:logEntry.position,radius:logEntry.position.accuracy}))};[{id:"#gambleAmount",name:"gambleAmount"}].forEach(function(control){$(control.id).focusout(function(){$scope[control.name]||($scope[control.name]=parseFloat($(control.id).val()),console.info('Undefined value corrected for "'+control.name+'" :'+$scope[control.name]))})}),$(document).ready(function(){var mapOptions={zoom:10,center:new google.maps.LatLng(47.29725,8.867215),mapTypeControlOptions:{mapTypeIds:[google.maps.MapTypeId.ROADMAP]}};console.log(document.getElementById("map_canvas")),$scope.map=new google.maps.Map(document.getElementById("map-log"),mapOptions),$scope.propertyMarkers=new PropertyMarkers($scope.map,dataStore.getProperties()),dataStore.onPropertiesUpdated(function(p){$scope.propertyMarkers.updateProperty(p)})})}function dashboardCtrl($scope){$scope.rankingList=[],$scope.teamIdToTeamName=dataStore.teamIdToTeamName,$scope.rankingListLoaded=!1,$scope.rankingListWaiting=!1,$scope.refresh=function(){$scope.refreshRankingList(),$scope.updateTrafficInfo()},$scope.refreshRankingList=function(){dataStore.getRankingList(function(err,list){err?(console.log("Error while getting ranking list: "+err.message),$scope.rankingList=[]):$scope.rankingList=list,$scope.rankingListLoaded=!0,$scope.$apply(),console.log("Ranking list received"),console.log($scope.rankingList)})},$scope.refreshRankingList(),$scope.trafficInfo={},$scope.trafficInfoLoaded=!1,$scope.updateTrafficInfo=function(callback){dataStore.getTrafficInfo({delay:!0,construction:!0,restriction:!0,limit:8,onlyCurrent:!1},function(err,trafficInfo){$scope.trafficInfo=trafficInfo,$scope.trafficInfoLoaded=!0,console.log(trafficInfo),callback&&callback()})},$scope.gp=dataStore.getGameplay(),$(document).ready(function(){$scope.refreshRankingList(),$scope.updateTrafficInfo(function(){$scope.$apply()}),dataStore.registerTeamAccountUpdateHandler(function(){$scope.rankingListWaiting?console.log("Waiting for ranking list..."):($scope.rankingListWaiting=!0,_.delay(function(){dataStore.getRankingList(function(err,list){$scope.rankingListWaiting=!1,err?console.error(err):($scope.rankingList=list,console.log("Rankinglist updated")),$scope.$apply()})},5e3))})})}function PropertyMarkers(map,properties){if(this.map=map,this.properties=properties,this.markers=[],this.openInfoWindows=[],_.isUndefined(google))return console.warn("Google Maps are not defined, PropertyMarkers are not enabled"),void(this.enabled=!1);this.enabled=!0,this.setMarkerIcons(this.iconsByAccessibility),this.setFilter(this.filterFreeProperties),this.createMarkers()}ferropolyApp.controller("teamAccountsCtrl",["$scope",function($scope){$scope.teams=dataStore.getTeams(),$scope.currentTeamId="undefined",$scope.teamNames={};for(var i=0;i<$scope.teams.length;i++)$scope.teamNames[$scope.teams[i].uuid]=$scope.teams[i].data.name;$scope.filter="{}",console.log($scope.filter),$scope.entries=dataStore.getTeamAccountEntries(),$scope.setTeam=function(teamId){$("#account-undefined").removeClass("active");for(var i=0;i<$scope.teams.length;i++)$("#account-"+$scope.teams[i].uuid).removeClass("active");$("#account-"+teamId).addClass("active"),$scope.currentTeamId=teamId},$scope.downloadUrl=function(){return dataStore.getGameplay().internal.gameId},$scope.getTransactionInfoText=function(entry){var retVal=entry.transaction.info;return"team"===entry.transaction.origin.category&&(retVal+=" ("+$scope.teamNames[entry.transaction.origin.uuid]+")"),retVal},$scope.accountFilter=function(entry){return!$scope.currentTeamId||entry.teamId===$scope.currentTeamId};dataStore.registerTeamAccountUpdateHandler(function(){}),$scope.refreshTeamAccounts=function(){console.log("refreshTeamAccounts!"),$scope.entries=dataStore.getTeamAccountEntries(),$scope.setTeam(void 0),$scope.$apply()}}]),ferropolyApp.controller("managecallCtrl",managecallCtrl),managecallCtrl.$inject=["$scope"],ferropolyApp.controller("dashboardCtrl",dashboardCtrl),dashboardCtrl.$inject=["$scope"],PropertyMarkers.prototype.removeAll=function(){this.enabled&&this.markers.forEach(function(m){m.setMap(null)})},PropertyMarkers.prototype.setFilter=function(filter){this.markerFilter=filter},PropertyMarkers.prototype.setMarkerIcons=function(markerFunction){this.markerIcons=markerFunction},PropertyMarkers.prototype.updateProperty=function(property){var marker=_.find(this.markers,function(m){return m.ferropolyProperty.uuid===property.uuid});marker.ferropolyProperty=property,this.updateMarker(marker)},PropertyMarkers.prototype.updateMarkers=function(){if(this.enabled){this.markers.forEach(this.updateMarker.bind(this))}},PropertyMarkers.prototype.updateMarker=function(marker){if(marker){this.markerFilter(marker.ferropolyProperty)?(marker.setMap(this.map),marker.setIcon(this.markerIcons(marker.ferropolyProperty))):marker.setMap(null)}else console.warn("Marker not found",marker)},PropertyMarkers.prototype.createMarkers=function(){if(this.enabled){var self=this;this.markers=[],this.properties.forEach(function(p){var m=new google.maps.Marker({position:new google.maps.LatLng(p.location.position.lat,p.location.position.lng),title:p.location.name});m.ferropolyProperty=p;var infowindow=new google.maps.InfoWindow({content:"<h4>"+p.location.name+"</h4><p>Kaufpreis: "+p.pricelist.price+"</p>"});m.addListener("click",function(){infowindow.open(self.map,m),self.openInfoWindows.push(infowindow)}),self.markers.push(m)})}},PropertyMarkers.prototype.closeAllInfoWindows=function(){this.openInfoWindows.forEach(function(i){i.close()}),this.openInfoWindows=[]},PropertyMarkers.prototype.filterFreeProperties=function(p){return!p.gamedata||!p.gamedata.owner},PropertyMarkers.prototype.filterTeamProperties=function(p){return!!p.gamedata&&p.gamedata.owner===this.teamId},PropertyMarkers.prototype.filterAllProperties=function(p){return!0},PropertyMarkers.prototype.setTeam=function(teamId){this.teamId=teamId};var map,ICON_EDIT_LOCATION="https://maps.gstatic.com/mapfiles/ms2/micons/red-dot.png",ICON_TRAIN_LOCATION="https://maps.gstatic.com/mapfiles/ms2/micons/green.png",ICON_BUS_LOCATION="https://maps.gstatic.com/mapfiles/ms2/micons/yellow.png",ICON_BOAT_LOCATION="https://maps.gstatic.com/mapfiles/ms2/micons/blue.png",ICON_CABLECAR_LOCATION="https://maps.gstatic.com/mapfiles/ms2/micons/purple.png",ICON_OTHER_LOCATION="https://maps.gstatic.com/mapfiles/ms2/micons/pink.png";function initializeMap(){if(_.isUndefined(google))return null;var styledMap=new google.maps.StyledMapType([{stylers:[{saturation:-29},{lightness:38}]},{featureType:"road.highway",elementType:"geometry",stylers:[{visibility:"simplified"}]},{featureType:"transit.station.bus",stylers:[{hue:"#ffff00"},{visibility:"on"}]},{featureType:"administrative.locality",elementType:"labels",stylers:[{visibility:"on"},{weight:.1},{color:"#252320"}]},{featureType:"road",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"administrative.country",elementType:"geometry.stroke",stylers:[{visibility:"on"},{weight:1.6},{color:"#a50f08"}]},{featureType:"transit.station.rail",stylers:[{visibility:"on"},{hue:"#006eff"},{weight:1.1}]},{featureType:"transit.line",elementType:"geometry.fill",stylers:[{visibility:"on"},{color:"#333333"},{weight:1.5}]},{featureType:"landscape.natural.landcover"}],{name:"Bahnkarte"}),mapOptions={zoom:8,center:new google.maps.LatLng(47.29725,8.867215),mapTypeControlOptions:{mapTypeIds:[google.maps.MapTypeId.ROADMAP,"map_style"]}};return console.log(document.getElementById("map_canvas")),(map=new google.maps.Map(document.getElementById("map_canvas"),mapOptions)).mapTypes.set("map_style",styledMap),map.setMapTypeId("map_style"),map}function refreshMapPanel(){_.isUndefined(google)||(dataStore.updateTravelLog(),dataStore.updateProperties(),_.delay(function(){google.maps.event.trigger(map,"resize");var center=dataStore.getMapCenter();map.setCenter(new google.maps.LatLng(center.lat,center.lng))},250))}function createTravelLogMarker(position,color,radiusFactor){var markerOptions={strokeColor:color,strokeOpacity:.8,strokeWeight:2,fillColor:color,fillOpacity:.35,map:map,center:new google.maps.LatLng(position.lat,position.lng),radius:4e3*radiusFactor};return new google.maps.Circle(markerOptions)}function drawTeamTravelLine(line,color){var lineOptions={path:line,geodesic:!0,strokeColor:color,strokeOpacity:1,strokeWeight:2,map:map};return new google.maps.Polyline(lineOptions)}function createFreePropertyMarker(property){if(!_.isUndefined(google)){var markerOptions={strokeColor:"black",strokeOpacity:.6,strokeWeight:1,fillColor:"white",fillOpacity:.5,map:map,center:new google.maps.LatLng(parseFloat(property.location.position.lat),parseFloat(property.location.position.lng)),radius:2e3};return new google.maps.Circle(markerOptions)}}function mapCtrl($scope){$scope.travelLogAll=!1,$scope.travelLogMarkers=[],$scope.teams=[],$scope.activePanel="none",$(document).ready(function(){initializeMap()&&($scope.propertyMarkers=new PropertyMarkers(map,dataStore.getProperties()),dataStore.onPropertiesUpdated(function(p){$scope.propertyMarkers.updateProperty(p)}))}),$scope.buildTeamInfo=function(){for(var teams=dataStore.getTeams(),i=0;i<teams.length;i++)$scope.teams.push({teamId:teams[i].uuid,name:teams[i].data.name,color:dataStore.getTeamColor(teams[i].uuid),displayOnMap:!1})},$scope.enableTravelLogAll=function(){for(var i=0;i<$scope.teams.length;i++)$scope.teams[i].displayOnMap=$scope.travelLogAll;$scope.drawTravelLog()},$scope.mapApiLoaded=function(){return google&&google.maps},$scope.getTravelLog=function(teamId){return dataStore.getTravelLog(teamId)},$scope.updateMap=function(){"maps-travellog"===$scope.activePanel&&$scope.drawTravelLog()},$scope.drawTravelLog=function(){var i;if("maps-travellog"===$scope.activePanel)for($scope.deleteTravelLogMarkers(),$scope.deleteTravelLines(),$scope.travelLines=[],$scope.propertyMarkers.updateMarkers(),i=0;i<$scope.teams.length;i++)if($scope.teams[i].displayOnMap)for(var log=_.map(dataStore.getTravelLog($scope.teams[i].teamId),_.clone),factor=1/(log=_.sortBy(log,"timestamp")).length,line=[],t=0;t<log.length;t++)log[t].position&&(line.push(new google.maps.LatLng(log[t].position.lat,log[t].position.lng)),$scope.travelLogMarkers.push({teamId:log[t].teamId,marker:createTravelLogMarker({lat:log[t].position.lat,lng:log[t].position.lng},dataStore.getTeamColor(log[t].teamId),factor*(t+1))}),$scope.travelLines.push(drawTeamTravelLine(line,dataStore.getTeamColor(log[t].teamId))))},$scope.deleteTravelLogMarkers=function(){if($scope.travelLogMarkers){for(var i=0;i<$scope.travelLogMarkers.length;i++)$scope.travelLogMarkers[i].marker.setMap(null);$scope.travelLogMarkers=[]}},$scope.deleteTravelLines=function(){if($scope.travelLines){for(var i=0;i<$scope.travelLines.length;i++)$scope.travelLines[i].setMap(null);$scope.travelLines=[]}},$scope.panels=[{id:"maps-travellog"},{id:"maps-pricelist"}],$scope.showMapsPanel=function(panel){for(var i=0;i<$scope.panels.length;i++)$("#"+$scope.panels[i].id).hide(),$("#tab-"+$scope.panels[i].id).removeClass("active");$("#"+panel).show(),$("#tab-"+panel).addClass("active"),$scope.activePanel=panel},$scope.showMapsPanel("maps-travellog"),$scope.buildTeamInfo(),registerPanelUpdateHandler("#panel-map",$scope.updateMap)}function ferrostatsCtrl($scope){$scope.rankingList=[],$scope.incomeList=[],$scope.refreshHandler=$scope.showStatsIncome,$scope.refresh=function(){$scope.refreshHandler&&$scope.refreshHandler()},$scope.showStatsPossessions=function(){dataStore.getRankingList(function(err,list){err?(console.log("Error while getting ranking list: "+err.message),$scope.rankingList=[]):$scope.rankingList=_.sortBy(_.values(list),function(n){return n.teamName}),ferroStats.drawRankingChart($scope.rankingList,"stats-possessions-chart"),$scope.$apply(),console.log("Ranking list received"),console.log($scope.rankingList)})},$scope.teamIdToTeamName=dataStore.teamIdToTeamName,$scope.showStatsPossessionTimeline=function(){var entries=dataStore.getTeamAccountEntries();0!==entries.length?ferroStats.drawPossessionTimelineChart(entries,dataStore.getTeams()):$scope.updatePossessionTimeline()},$scope.showStatsIncome=function(){dataStore.getIncomeList(function(err,list){err?(console.log("Error while getting income list: "+err.message),$scope.incomeList=[]):$scope.incomeList=_.sortBy(_.values(list),function(n){return n.teamName}),ferroStats.drawIncomeChart($scope.incomeList,"stats-income-chart"),$scope.$apply(),console.log("Ranking list received"),console.log($scope.incomeList)})},$scope.updatePossessionTimeline=function(){dataStore.updateTeamAccountEntries(function(){$scope.showStatsPossessionTimeline(),$scope.$apply()})},$scope.showIncomeDetails=function(teamId){var entry=_.find($scope.incomeList,{teamId:teamId});ferroStats.drawIncomeDetailChart(entry.register,"stats-income-chart")},$scope.panels=[{id:"stats-possessions",handler:$scope.showStatsPossessions},{id:"stats-income",handler:$scope.showStatsIncome},{id:"stats-possession-timeline",handler:$scope.showStatsPossessionTimeline}],$scope.showStatsPanel=function(panel){for(var i=0;i<$scope.panels.length;i++)$("#"+$scope.panels[i].id).hide().removeClass("active"),$scope.panels[i].id===panel&&($scope.panels[i].handler(),$scope.refreshHandler=$scope.panels[i].handler);$("#"+panel).show(),$("#tab-"+panel).addClass("active")},$scope.showStatsPanel("stats-possessions")}function chanceCtrl($scope){$scope.entries=[],$scope.teams=dataStore.getTeams(),$scope.chancelleryAsset=0,$scope.teamNames={};for(var i=0;i<$scope.teams.length;i++)$scope.teamNames[$scope.teams[i].uuid]=$scope.teams[i].data.name;$scope.updateData=function(){dataStore.updateChancellery(function(){$scope.entries=dataStore.getChancelleryEntries(),$scope.chancelleryAsset=dataStore.getChancelleryAsset(),$scope.$apply()})},registerPanelUpdateHandler("#panel-chance",$scope.updateData)}function propertiesCtrl($scope){var travelLogLoaded=!1;$scope.properties=[],$scope.listPredicate="pricelist.position",$scope.reverse=!1,$scope.currentProperty={},$scope.travelLog=[],$scope.updateProperties=function(){dataStore.updateProperties(void 0,function(){$scope.properties=dataStore.getProperties(),$scope.currentProperty.location||($scope.currentProperty=$scope.properties[0]),console.log("propertiesCtrl length: "+$scope.properties.length),$scope.$apply(),travelLogLoaded||dataStore.updateTravelLog(void 0,function(){travelLogLoaded=!0,$scope.$apply()})})},$scope.getTeamName=function(teamId){return dataStore.teamIdToTeamName(teamId)},$scope.setCurrentProperty=function(property){$scope.currentProperty=property,$scope.travelLog=dataStore.getTravelLogForProperty(property.uuid)},registerPanelUpdateHandler("#panel-properties",$scope.updateProperties)}function resizePropertyList(){var dh=$(window).height(),propList=document.querySelector("#property-list"),h=dh-$("#ferropoly-navbar").height();propList.style.height=h.toString()+"px"}function trafficCtrl($scope){$scope.trafficInfo={},$scope.showDelay=!0,$scope.showRestriction=!0,$scope.showConstruction=!0,$scope.showOnlyCurrent=!1,$scope.updateTrafficInfo=function(callback){dataStore.getTrafficInfo({delay:$scope.showDelay,restriction:$scope.showRestriction,construction:$scope.showConstruction,onlyCurrent:$scope.showOnlyCurrent},function(err,trafficInfo){$scope.trafficInfo=trafficInfo,console.log(trafficInfo),callback&&callback()})},$(document).ready(function(){$scope.updateTrafficInfo(function(){$scope.$apply()})})}PropertyMarkers.prototype.iconsByAccessibility=function(p){switch(p.location.accessibility){case"train":return ICON_TRAIN_LOCATION;case"bus":return ICON_BUS_LOCATION;case"boat":return ICON_BOAT_LOCATION;case"cablecar":return ICON_CABLECAR_LOCATION;default:return ICON_OTHER_LOCATION}},ferropolyApp.controller("mapCtrl",mapCtrl),ferropolyApp.controller("ferrostatsCtrl",ferrostatsCtrl),ferrostatsCtrl.$inject=["$scope"],ferropolyApp.controller("chanceCtrl",chanceCtrl),chanceCtrl.$inject=["$scope"],ferropolyApp.controller("propertiesCtrl",propertiesCtrl),$(window).resize(resizePropertyList),$(document).ready(resizePropertyList),propertiesCtrl.$inject=["$scope"],ferropolyApp.controller("trafficCtrl",trafficCtrl),trafficCtrl.$inject=["$scope"];