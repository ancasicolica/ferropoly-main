/* Ferropoly-Game V0.11.1, 11-07-2015, (c) Christian Kuster, CH-8342 Wernetshausen, christian@kusti.ch */
"use strict";var panelUpdateHandlers={};function registerPanelUpdateHandler(panel,handler){panelUpdateHandlers[panel]=handler}function showPanel(p){var activeCallAlert=$("#active-call");for(var i=0;i<receptionPanels.length;i++){$(receptionPanels[i]).hide()}if(activeCall.isActive()){activeCallAlert.show()}else{activeCallAlert.hide()}switch(p){case"#panel-teamaccounts":dataStore.updateTeamAccountEntries(undefined,angular.element("#team-accounts-ctrl").scope().refreshTeamAccounts);break;case"#panel-managecall":activeCallAlert.hide();break;case"#panel-stats":angular.element("#ferrostats-ctrl").scope().refresh();break;case"#panel-map":refreshMapPanel();break}if(panelUpdateHandlers[p]){panelUpdateHandlers[p]()}$(p).show()}$(document).ready(function(){console.log("document ready");showPanel("#panel-main")});var ferropolyApp=angular.module("ferropolyApp",[]);ferropolyApp.filter("offset",function(){return function(input,start){start=parseInt(start,10);return input.slice(start)}});"use strict";var ferropolySocket=io.connect(socketUrl);$("#offline").show();$("#online").hide();ferropolySocket.on("disconnect",function(){console.log("disconnected");$("#offline").show();$("#online").hide()});ferropolySocket.on("test",function(data){console.log("test: "+data)});ferropolySocket.on("identify",function(){console.log("identify received");console.log(ferropoly.authToken);ferropolySocket.emit("identify",{user:ferropoly.user,authToken:ferropoly.authToken,gameId:ferropoly.gameplay.internal.gameId})});ferropolySocket.on("initialized",function(){console.log("initialized");$("#online").show();$("#offline").hide()});ferropolySocket.on("connection",function(){console.log("socket.io connection event")});ferropolySocket.on("connect",function(){console.log("socket.io connect event")});ferropolySocket.on("connect_error",function(obj){console.log("socket.io connect_error event");console.log(obj)});ferropolySocket.on("reconnect",function(){console.log("socket.io reconnect event")});ferropolySocket.on("reconnect_attempt",function(){console.log("socket.io reconnect_attempt event")});ferropolySocket.on("reconnecting",function(){console.log("socket.io reconnecting event")});ferropolySocket.on("reconnect_error",function(){console.log("socket.io reconnect_error event")});ferropolySocket.on("reconnect_failed",function(){console.log("socket.io reconnect_failed event")});"use strict";var DataStore=function(initData,socket){this.data=initData;this.data.events={};this.socket=socket;var self=this;this.teamColors=["blue","brown","darkgreen","gold","red","olive","peru","cyan","indianred","khaki","greenyellow","plum","skyblue","navy","darkred","lightsalmon","lime","fuchsia","indigo","chocolate"];this.socket.on("teamAccount",function(resp){console.log("onTeamAccount: "+resp.cmd);switch(resp.cmd){case"onTransaction":if(!self.data.teamAccountEntries){self.data.teamAccountEntries=[]}self.data.teamAccountEntries.push(resp.data);console.log("received new team transaction");break;default:console.log("UNHANDLED: "+resp.cmd);break}});this.socket.on("propertyAccount",function(ind){switch(ind.cmd){case"propertyBought":case"buildingBuilt":var i=_.findIndex(self.data.pricelist,{uuid:ind.property.uuid});self.data.pricelist[i]=ind.property;console.log("Property account, updated: "+i+"("+ind.cmd+")");break;default:console.log("UNHANDLED: "+ind.cmd);break}});this.socket.on("chancelleryAccount",function(resp){console.log("UNHANDLED: "+resp)});this.socket.on("properties",function(resp){console.log("onProperties");console.log(resp);switch(resp.cmd){case"getProperties":console.log("Pricelist updated, properties: "+resp.data.length);self.data.pricelist=resp.data;break}});this.socket.on("marketplace",function(info){console.log("onMarketplace: "+info.cmd);console.log(info);switch(info.cmd){case"buyProperty":if(info.result.property){self.updatePropertyInPricelist(info.result.property)}break}})};DataStore.prototype.getTeams=function(){return this.data.teams};DataStore.prototype.getTeamColor=function(teamId){var index=_.findIndex(this.data.teams,{uuid:teamId});if(index>-1&&index<this.teamColors.length){return this.teamColors[index]}return"black"};DataStore.prototype.teamIdToTeamName=function(teamId){return _.result(_.find(dataStore.getTeams(),{uuid:teamId}),"data.name")};DataStore.prototype.updateTravelLog=function(teamId,callback){console.log("update travel log for "+teamId);var self=this;$.get("/travellog/"+this.getGameplay().internal.gameId+"/"+teamId,function(data){if(data.status==="ok"){console.log("/travellog ok");if(!teamId){self.data.travelLog=data.travelLog}else{if(!self.data.travelLog){self.data.travelLog=[]}_.remove(self.data.travelLog,function(e){return e.teamId===teamId});for(var i=0;i<data.travelLog.length;i++){self.data.travelLog.push(data.travelLog[i])}}_.sortBy(self.data.travelLog,function(e){return e.timestamp})}else{console.error("ERROR when getting travelLog:");console.log(data)}}).fail(function(data){console.error("ERROR when getting travelLog (2):");console.log(data)}).always(function(){console.log("travelLog.always()");if(callback){callback()}})};DataStore.prototype.getTravelLog=function(teamId){console.log("getTravelLog for: "+teamId);if(!this.data.travelLog){this.data.travelLog=[]}if(!teamId){return this.data.travelLog}return _.filter(this.data.travelLog,function(n){return n.teamId===teamId})};DataStore.prototype.getTravelLogForProperty=function(propertyId){console.log("getTravelLogForProperty for: "+propertyId);if(!this.data.travelLog){this.data.travelLog=[]}var propLog=_.filter(this.data.travelLog,function(n){return n.propertyId===propertyId});return _.sortBy(propLog,"timestamp")};DataStore.prototype.getGameplay=function(){return this.data.gameplay};DataStore.prototype.isGameActive=function(){var start=moment(this.data.gameplay.scheduling.gameStartTs);var end=moment(this.data.gameplay.scheduling.gameEndTs);if(moment().isAfter(end)){console.log("Game over");return false}if(moment().isBefore(start)){console.log("Game not started yet");return false}return true};DataStore.prototype.updateTeamAccountEntries=function(teamId,callback){console.log("update team account for "+teamId);var self=this;$.get("/teamAccount/get/"+this.getGameplay().internal.gameId+"/"+teamId,function(data){if(data.status==="ok"){console.log("/teamAccount ok");if(!teamId){self.data.teamAccountEntries=data.accountData}else{if(!self.data.teamAccountEntries){self.data.teamAccountEntries=[]}_.remove(self.data.teamAccountEntries,function(e){return e.teamId===teamId});for(var i=0;i<data.accountData.length;i++){self.data.teamAccountEntries.push(data.accountData[i])}}_.sortBy(self.data.teamAccountEntries,function(e){return e.timestamp})}else{console.error("ERROR when getting accountData:");console.log(data)}}).fail(function(data){console.error("ERROR when getting accountData (2):");console.log(data)}).always(function(){console.log("updateTeamAccountEntries.always()");if(callback){callback()}})};DataStore.prototype.getTeamAccountEntries=function(teamId){console.log("getTeamAccountEntries for: "+teamId);if(!this.data.teamAccountEntries){this.data.teamAccountEntries=[]}if(!teamId){return this.data.teamAccountEntries}return _.filter(this.data.teamAccountEntries,function(n){return n.teamId===teamId})};DataStore.prototype.getTeamAccountBalance=function(teamId){var entries=this.getTeamAccountEntries(teamId);var balance=0;for(var i=0;i<entries.length;i++){balance+=entries[i].transaction.amount}return balance};DataStore.prototype.updatePropertyAccountEntries=function(propertyId){console.log("update property account for "+propertyId);this.socket.emit("propertyAccount",{cmd:"getAccountStatement",propertyId:propertyId})};DataStore.prototype.getPropertyAccountEntries=function(teamId){if(!teamId){return this.data.propertyAccountEntries}return _.filter(this.data.propertyAccountEntries,function(n){return n.transaction.origin.uuid===teamId})};DataStore.prototype.updateChancellery=function(callback){var self=this;console.log("update chancellery");$.get("/chancellery/account/statement/"+this.getGameplay().internal.gameId,function(data){if(data.status==="ok"){self.data.chancelleryEntries=data.entries}else{console.log("ERROR when getting chancellery data:");console.log(data);self.data.chancelleryEntries=[]}if(callback){callback()}}).fail(function(data){console.log("ERROR when getting chancellery data (2):");console.log(data);self.data.chancelleryEntries=[];if(callback){callback()}})};DataStore.prototype.getChancelleryEntries=function(teamId){if(!teamId){return this.data.chancelleryEntries}return _.filter(this.data.chancelleryEntries,function(n){return n.transaction.origin.uuid===teamId})};DataStore.prototype.getChancelleryAsset=function(){return _.sum(this.data.chancelleryEntries,"transaction.amount")};DataStore.prototype.updateProperties=function(teamId,callback){var self=this;console.log("update pricelist for "+teamId);$.get("/properties/get/"+this.getGameplay().internal.gameId+"/"+teamId,function(data){if(data.status==="ok"){for(var i=0;i<data.properties.length;i++){self.updatePropertyInPricelist(data.properties[i])}}else{console.log("ERROR when getting properties:");console.log(data)}if(callback){callback()}}).fail(function(data){console.log("ERROR when getting properties (2):");console.log(data);if(callback){callback()}})};DataStore.prototype.updatePropertyInPricelist=function(property){if(property&&property.uuid){var i=_.findIndex(this.data.pricelist,{uuid:property.uuid});if(i>-1){this.data.pricelist[i]=property}}};DataStore.prototype.getProperties=function(teamId){if(!teamId){return this.data.pricelist}return _.filter(this.data.pricelist,function(n){if(!n.gamedata){return false}return n.gamedata.owner===teamId})};DataStore.prototype.getFreeProperties=function(){return _.filter(this.data.pricelist,function(n){if(!n.gamedata){return true}return!n.gamedata.owner})};DataStore.prototype.searchProperties=function(query,limit){console.log('Query: "'+query+'" Limit: '+limit);if(!query||query.length===0){return[]}var items=_.filter(this.data.pricelist,function(p){return p.location.name.toLowerCase().indexOf(query.toLowerCase())>-1});return _.slice(items,0,limit)};DataStore.prototype.getPropertyById=function(propertyId){return _.find(this.data.pricelist,{uuid:propertyId})};DataStore.prototype.getMapCenter=function(){var latSum=0,lngSum=0;for(var i=0;i<this.data.pricelist.length;i++){latSum+=parseFloat(this.data.pricelist[i].location.position.lat);lngSum+=parseFloat(this.data.pricelist[i].location.position.lng)}return{lat:latSum/this.data.pricelist.length,lng:lngSum/this.data.pricelist.length}};DataStore.prototype.pushEvent=function(teamId,eventText){if(!this.data.events[teamId]){this.data.events[teamId]=[]}this.data.events[teamId].push({ts:new Date,message:eventText})};DataStore.prototype.getEvents=function(teamId){if(!this.data.events[teamId]){this.data.events[teamId]=[]}return this.data.events[teamId]};DataStore.prototype.getAuthToken=function(){return this.data.authToken};DataStore.prototype.getRankingList=function(callback){var self=this;console.log("start query for ranking list");$.get("/statistics/rankingList/"+this.getGameplay().internal.gameId,function(data){if(data.status==="ok"){for(var i=0;i<data.ranking.length;i++){data.ranking[i].teamName=self.teamIdToTeamName(data.ranking[i].teamId)}self.data.rankingList=data.ranking;return callback(null,self.data.rankingList)}else{self.data.rankingList=[];return callback(new Error(data.message))}}).fail(function(error){callback(error)})};DataStore.prototype.getIncomeList=function(callback){var self=this;console.log("start query for ranking list");$.get("/statistics/income/"+this.getGameplay().internal.gameId,function(data){if(data.status==="ok"){for(var i=0;i<data.info.length;i++){data.info[i].teamName=self.teamIdToTeamName(data.info[i].teamId)}self.data.incomeList=data.info;return callback(null,self.data.incomeList)}else{self.data.incomeList=[];return callback(new Error(data.message))}}).fail(function(error){callback(error)})};var dataStore=new DataStore(ferropoly,ferropolySocket);"use strict";var FerroStats=function(){var self=this;this.graphApiAvailable=false};FerroStats.prototype.loadChartApi=function(){var self=this;if(this.graphApiAvailable){return}function onGraphApiLoaded(){console.log("Google Grap API loaded");self.graphApiAvailable=true;console.log("showing #stats-main");$("#stats-load-error").hide();$("#stats-main").show()}console.log("retrieving jsapi");$.getScript("https://www.google.com/jsapi").done(function(script,textStatus){console.log("jsapi loaded, now loading chart api");google.load("visualization","1.0",{packages:["corechart"],callback:onGraphApiLoaded})}).fail(function(jqxhr,settings,exception){console.log("Triggered ajaxError handler.");console.log(exception)})};FerroStats.prototype.drawRankingChart=function(data,chartId){if(!this.graphApiAvailable){console.warn("graphApi not available");return}var chartData=new google.visualization.DataTable;chartData.addColumn("string","Team");chartData.addColumn("number","Vermögen");chartData.addColumn({type:"string",role:"style"});var maxValue=0;for(var i=0;i<data.length;i++){chartData.addRow([data[i].teamName,data[i].asset,dataStore.getTeamColor(data[i].teamId)]);if(data[i].asset>maxValue){maxValue=data[i].asset}}maxValue*=1.1;var options={title:"Vermögen",curveType:"function",legend:{position:"none"},height:600,backgroundColor:{fill:"transparent"},vAxis:{minValue:0,maxValue:maxValue,gridlines:{count:10}}};var chart=new google.visualization.ColumnChart(document.getElementById(chartId));chart.draw(chartData,options)};FerroStats.prototype.drawIncomeChart=function(data,chartId){if(!this.graphApiAvailable){console.warn("graphApi not available");return}var chartData=new google.visualization.DataTable;chartData.addColumn("string","Team");chartData.addColumn("number","Einkommen");chartData.addColumn({type:"string",role:"style"});var maxValue=0;for(var i=0;i<data.length;i++){chartData.addRow([data[i].teamName,data[i].totalAmount,dataStore.getTeamColor(data[i].teamId)]);if(data[i].totalAmount>maxValue){maxValue=data[i].totalAmount}}maxValue*=1.1;var options={title:"Einkommen (Miete)",curveType:"function",legend:{position:"none"},height:600,backgroundColor:{fill:"transparent"},vAxis:{minValue:0,maxValue:maxValue,gridlines:{count:10}}};var chart=new google.visualization.ColumnChart(document.getElementById(chartId));chart.draw(chartData,options)};FerroStats.prototype.drawIncomeDetailChart=function(register,chartId){var dataArray=[["Ort","Einkommen"]];register=_.sortBy(register,function(n){return n.amount*-1});for(var i=0;i<register.length;i++){dataArray.push([register[i].propertyName,register[i].amount])}var data=google.visualization.arrayToDataTable(dataArray);var options={title:"Einkommensquellen",height:600,backgroundColor:{fill:"transparent"}};var chart=new google.visualization.PieChart(document.getElementById(chartId));chart.draw(data,options)};var ferroStats=new FerroStats;$(document).ready(function(){console.log("hiding #stats-main");$("#stats-load-error").show();$("#stats-main").hide();ferroStats.loadChartApi()});"use strict";var ActiveCall=function(){this.currentTeam=undefined};ActiveCall.prototype.getCurrentTeam=function(){return this.currentTeam};ActiveCall.prototype.setCurrentTeam=function(team){this.currentTeam=team};ActiveCall.prototype.finish=function(){this.currentTeam=undefined};ActiveCall.prototype.isActive=function(){return this.currentTeam!==undefined};var activeCall=new ActiveCall;"use strict";ferropolyApp.controller("teamAccountsCtrl",["$scope","$http",function($scope,$http){$scope.teams=dataStore.getTeams();$scope.currentTeamId="undefined";$scope.teamNames={};for(var i=0;i<$scope.teams.length;i++){$scope.teamNames[$scope.teams[i].uuid]=$scope.teams[i].data.name}$scope.filter="{}";console.log($scope.filter);$scope.entries=dataStore.getTeamAccountEntries();$scope.setTeam=function(teamId){$("#account-undefined").removeClass("active");for(var i=0;i<$scope.teams.length;i++){$("#account-"+$scope.teams[i].uuid).removeClass("active")}$("#account-"+teamId).addClass("active");console.log("set team Id: "+teamId);$scope.entries=dataStore.getTeamAccountEntries(teamId);$scope.currentTeamId=teamId;console.log("entries: "+$scope.entries.length)};$scope.downloadUrl=function(){return dataStore.getGameplay().internal.gameId+"/"+$scope.currentTeamId};ferropolySocket.on("teamAccount",function(){$scope.entries=dataStore.getTeamAccountEntries();$scope.$apply()});$scope.getTransactionInfoText=function(entry){var retVal=entry.transaction.info;if(entry.transaction.origin.category==="team"){retVal+=" ("+$scope.teamNames[entry.transaction.origin.uuid]+")"}return retVal};$scope.refreshTeamAccounts=function(){console.log("refreshTeamAccounts!");$scope.setTeam(undefined);$scope.$apply()}}]);"use strict";ferropolyApp.controller("managecallCtrl",managecallCtrl);function managecallCtrl($scope,$http){$scope.itemsPerPage=6;$scope.currentPage=0;$scope.propertyQuery="";$scope.propertyQueryResult=[];$scope.teams=dataStore.getTeams();$scope.callPanel=0;$scope.preselectedTeam=undefined;$scope.selectedTeam=activeCall.getCurrentTeam();$scope.teamInfo={numberOfProperties:0,balance:0,accountEntries:[],properties:[],callLog:[]};$scope.propertyInvestCandidate=undefined;$scope.isGameActive=function(){return dataStore.isGameActive()};function pushEvent(text){dataStore.pushEvent(activeCall.getCurrentTeam().uuid,text)}$scope.getTeamColor=function(teamId){return dataStore.getTeamColor(teamId)};$scope.getPropertyName=function(propertyId){return dataStore.getPropertyById(propertyId).location.name};$scope.showCallPanel=function(panel){$("#possessions").hide();$("#buy").hide();$("#log").hide();$("#tab-possessions").removeClass("active");$("#tab-buy").removeClass("active");$("#tab-log").removeClass("active");$("#"+panel).show();$("#tab-"+panel).addClass("active")};$scope.refreshActiveTeam=function(){$scope.selectedTeam=activeCall.getCurrentTeam();return $scope.selectedTeam};$scope.refreshAccountInfo=function(team){if(!team){team=$scope.selectedTeam}dataStore.updateTeamAccountEntries(team.uuid,function(){console.log("update received for teamAccount: "+team.uuid);$scope.teamInfo.balance=dataStore.getTeamAccountBalance(team.uuid);$scope.teamInfo.accountEntries=dataStore.getTeamAccountEntries(team.uuid);$scope.setPage(5e3);$scope.$apply()})};$scope.refreshProperties=function(team){if(!team){team=$scope.selectedTeam}dataStore.updateProperties(team.uuid,function(){$scope.teamInfo.properties=dataStore.getProperties(team.uuid);dataStore.updateTravelLog(team.uuid,function(){$scope.teamInfo.travelLog=dataStore.getTravelLog(team.uuid);$scope.$apply()})})};$scope.preselectTeam=function(team){console.log(team.data.name+" / "+team.uuid);$scope.preselectedTeam=team;$scope.callLog=[];$scope.gambleAmount=0;dataStore.updateChancellery();$scope.refreshProperties(team);$scope.refreshAccountInfo(team)};$scope.confirmTeam=function(playChancellery){console.log("Chancellery: "+playChancellery);activeCall.setCurrentTeam($scope.preselectedTeam);$scope.selectedTeam=$scope.preselectedTeam;$scope.preselectedTeam=undefined;if(playChancellery){$http.get("/chancellery/play/"+dataStore.getGameplay().internal.gameId+"/"+$scope.selectedTeam.uuid).success(function(data){console.log(data);if(data.status==="ok"){var infoClass="alert-success";if(data.result.amount<0){infoClass="alert-danger"}$scope.callLog.push({"class":infoClass,title:data.result.infoText,message:data.result.amount,ts:new Date})}$scope.callPanel=2;$scope.showCallPanel("buy")}).error(function(data,status){console.log(data);$scope.callPanel=2;$scope.showCallPanel("buy")})}else{$scope.callPanel=2;$scope.showCallPanel("buy")}};$scope.finishCall=function(){$scope.callPanel=0;$scope.teamInfo.numberOfProperties=0;$scope.teamInfo.balance=0;$scope.teamInfo.accountEntries=[];$scope.teamInfo.callLog=[];$scope.teamInfo.travelLog=[];$scope.currentPage=0;$scope.propertyQuery="";$scope.propertyQueryResult=[];$scope.selectedTeam=undefined;$scope.preselectedTeam=undefined;activeCall.finish()};$scope.buyHouses=function(){$http.post("/marketplace/buildHouses/"+dataStore.getGameplay().internal.gameId+"/"+activeCall.getCurrentTeam().uuid,{authToken:dataStore.getAuthToken()}).success(function(data){console.log(data);var msg;if(data.result.amount===0){msg="Es konnten keine Häuser gebaut werden"}else{msg="Belastung: "+data.result.amount+", Gebaute Häuser: ";for(var i=0;i<data.result.log.length;i++){msg+=data.result.log[i].propertyName+" ("+data.result.log[i].buildingNb+" / "+data.result.log[i].amount+") "}}$scope.callLog.push({"class":"alert-success",title:"Hausbau",message:msg,ts:new Date})}).error(function(data,status){$scope.callLog.push({"class":"alert-danger",title:"Hausbau",message:"Fehler: "+status,ts:new Date});console.log(data)})};$scope.gambleAmount=0;$scope.gamble=function(factor){if(!_.isNumber($scope.gambleAmount)){return}$http.post("/chancellery/gamble/"+dataStore.getGameplay().internal.gameId+"/"+activeCall.getCurrentTeam().uuid,{authToken:dataStore.getAuthToken(),amount:Math.abs($scope.gambleAmount)*factor}).success(function(data){console.log(data);if(data.status==="ok"){var infoClass="alert-success";if(data.result.amount<0){infoClass="alert-danger"}$scope.callLog.push({"class":infoClass,title:data.result.infoText,message:data.result.amount,ts:new Date});$scope.$apply()}}).error(function(data,status){$scope.callLog.push({"class":"alert-danger",title:"Hausbau",message:"Fehler: "+status,ts:new Date});console.log(data);$scope.$apply()})};$scope.prevPage=function(){if($scope.currentPage>0){$scope.currentPage--}};$scope.prevPageDisabled=function(){return $scope.currentPage===0?"disabled":""};$scope.pageCount=function(){return Math.ceil($scope.teamInfo.accountEntries.length/$scope.itemsPerPage)};$scope.nextPage=function(){if($scope.currentPage<$scope.pageCount()){$scope.currentPage++}};$scope.nextPageDisabled=function(){return $scope.currentPage===$scope.pageCount()-1?"disabled":""};$scope.setPage=function(n){if(n<0){n=0}if(n>$scope.pageCount()){n=$scope.pageCount()-1}$scope.currentPage=n};$scope.range=function(){var rangeSize=8;var ret=[];var start;start=$scope.currentPage;if(start>$scope.pageCount()-rangeSize){start=$scope.pageCount()-rangeSize}if(start<0){start=0}for(var i=start;i<start+rangeSize&&i<$scope.pageCount();i++){ret.push(i)}return ret};$scope.runPropertyQuery=function(){$scope.propertyQueryResult=dataStore.searchProperties($scope.propertyQuery,8)};$scope.setPropertyInvestCandidate=function(candidate){$scope.propertyInvestCandidate=candidate};$scope.buyProperty=function(property){$http.post("/marketplace/buyProperty/"+dataStore.getGameplay().internal.gameId+"/"+activeCall.getCurrentTeam().uuid+"/"+property.uuid,{authToken:dataStore.getAuthToken()}).success(function(data){if(data.status==="ok"){console.log(data);var res=data.result;var infoClass="alert-success";var title="Kauf "+res.property.location.name;var msg;if(res.owner){infoClass="alert-danger";msg="Das Grundstück ist bereits verkauft, Mietzins: "+res.amount}else if(res.amount===0){infoClass="alert-info";msg="Das Grundstück gehört der anrufenden Gruppe"}else{msg="Grundstück gekauft. Preis: "+res.amount}$scope.callLog.push({"class":infoClass,title:title,message:msg,ts:new Date})}}).error(function(data,status){console.log("ERROR");console.log(data);console.log(status);$scope.callLog.push({"class":"alert-danger",title:"Grundstückkauf",message:data,ts:new Date})})};ferropolySocket.on("marketplace",function(resp){switch(resp.cmd){case"buyHouses":console.log("Houses built");console.log(resp);break}});ferropolySocket.on("teamAccount",function(resp){if($scope.selectedTeam){$scope.teamInfo.balance=dataStore.getTeamAccountBalance($scope.selectedTeam.uuid);$scope.teamInfo.accountEntries=dataStore.getTeamAccountEntries($scope.selectedTeam.uuid);$scope.$apply()}});ferropolySocket.on("propertyAccount",function(ind){switch(ind.cmd){case"propertyBought":case"buildingBuilt":if($scope.selectedTeam&&ind.property.gamedata.owner===$scope.selectedTeam.uuid){$scope.teamInfo.properties=dataStore.getProperties($scope.selectedTeam.uuid)}break}})}managecallCtrl.$inject=["$scope","$http"];"use strict";ferropolyApp.controller("dashboardCtrl",dashboardCtrl);function dashboardCtrl($scope,$http){$scope.rankingList=[];$scope.teamIdToTeamName=dataStore.teamIdToTeamName;$scope.refreshRankingList=function(){dataStore.getRankingList(function(err,list){if(err){console.log("Error while getting ranking list: "+err.message);$scope.rankingList=[]}else{$scope.rankingList=list}$scope.$apply();console.log("Ranking list received");console.log($scope.rankingList)})};$scope.refreshRankingList()}dashboardCtrl.$inject=["$scope","$http"];"use strict";var map;function initializeMap(){if(!_.isUndefined(google)){var styles=[{stylers:[{saturation:-29},{lightness:38}]},{featureType:"road.highway",elementType:"geometry",stylers:[{visibility:"simplified"}]},{featureType:"transit.station.bus",stylers:[{hue:"#ffff00"},{visibility:"on"}]},{featureType:"administrative.locality",elementType:"labels",stylers:[{visibility:"on"},{weight:.1},{color:"#252320"}]},{featureType:"road",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"administrative.country",elementType:"geometry.stroke",stylers:[{visibility:"on"},{weight:1.6},{color:"#a50f08"}]},{featureType:"transit.station.rail",stylers:[{visibility:"on"},{hue:"#006eff"},{weight:1.1}]},{featureType:"transit.line",elementType:"geometry.fill",stylers:[{visibility:"on"},{color:"#333333"},{weight:1.5}]},{featureType:"landscape.natural.landcover"}];var styledMap=new google.maps.StyledMapType(styles,{name:"Bahnkarte"});var mapOptions={zoom:8,center:new google.maps.LatLng(47.29725,8.867215),mapTypeControlOptions:{mapTypeIds:[google.maps.MapTypeId.ROADMAP,"map_style"]}};console.log(document.getElementById("map_canvas"));map=new google.maps.Map(document.getElementById("map_canvas"),mapOptions);map.mapTypes.set("map_style",styledMap);map.setMapTypeId("map_style")}}$(document).ready(function(){initializeMap()});function refreshMapPanel(){if(_.isUndefined(google)){return}dataStore.updateTravelLog();dataStore.updateProperties();_.delay(function(){google.maps.event.trigger(map,"resize");var center=dataStore.getMapCenter();map.setCenter(new google.maps.LatLng(center.lat,center.lng))},250)}function createTravelLogMarker(property,color,radiusFactor){var markerOptions={strokeColor:color,strokeOpacity:.8,strokeWeight:2,fillColor:color,fillOpacity:.35,map:map,center:new google.maps.LatLng(parseFloat(property.location.position.lat),parseFloat(property.location.position.lng)),radius:4e3*radiusFactor};return new google.maps.Circle(markerOptions)}function drawTeamTravelLine(line,color){var lineOptions={path:line,geodesic:true,strokeColor:color,strokeOpacity:1,strokeWeight:2,map:map};return new google.maps.Polyline(lineOptions)}function createFreePropertyMarkers(){var freeProperties=dataStore.getFreeProperties();var markers=[];for(var i=0;i<freeProperties.length;i++){markers.push(createFreePropertyMarker(freeProperties[i]))}return markers}function createFreePropertyMarker(property){if(_.isUndefined(google)){return}var markerOptions={strokeColor:"black",strokeOpacity:.6,strokeWeight:1,fillColor:"white",fillOpacity:.5,map:map,center:new google.maps.LatLng(parseFloat(property.location.position.lat),parseFloat(property.location.position.lng)),radius:2e3};return new google.maps.Circle(markerOptions)}ferropolyApp.controller("mapCtrl",mapCtrl);function mapCtrl($scope,$http){$scope.travelLogAll=false;$scope.travelLogMarkers=[];$scope.teams=[];$scope.activePanel="none";$scope.buildTeamInfo=function(){var teams=dataStore.getTeams();for(var i=0;i<teams.length;i++){$scope.teams.push({teamId:teams[i].uuid,name:teams[i].data.name,color:dataStore.getTeamColor(teams[i].uuid),displayOnMap:false})}};$scope.enableTravelLogAll=function(){for(var i=0;i<$scope.teams.length;i++){$scope.teams[i].displayOnMap=$scope.travelLogAll}$scope.drawTravelLog()};$scope.mapApiLoaded=function(){return google&&google.maps};$scope.getTravelLog=function(teamId){return dataStore.getTravelLog(teamId)};$scope.updateMap=function(){if($scope.activePanel==="maps-travellog"){$scope.drawTravelLog()}};$scope.drawTravelLog=function(){if($scope.activePanel!=="maps-travellog"){return}var i;$scope.deleteFreePropertyMarkers();$scope.deleteTravelLogMarkers();$scope.deleteTravelLines();$scope.freePropertyMarkers=createFreePropertyMarkers();$scope.travelLines=[];for(i=0;i<$scope.teams.length;i++){if($scope.teams[i].displayOnMap){var log=_.map(dataStore.getTravelLog($scope.teams[i].teamId),_.clone);log=_.sortBy(log,"timestamp");var factor=1/log.length;var line=[];for(var t=0;t<log.length;t++){var property=dataStore.getPropertyById(log[t].propertyId);line.push(new google.maps.LatLng(parseFloat(property.location.position.lat),parseFloat(property.location.position.lng)));$scope.travelLogMarkers.push({teamId:log[t].teamId,marker:createTravelLogMarker(property,dataStore.getTeamColor(log[t].teamId),factor*(t+1))});$scope.travelLines.push(drawTeamTravelLine(line,dataStore.getTeamColor(log[t].teamId)))}}}};$scope.deleteTravelLogMarkers=function(){if($scope.travelLogMarkers){for(var i=0;i<$scope.travelLogMarkers.length;i++){$scope.travelLogMarkers[i].marker.setMap(null)}$scope.travelLogMarkers=[]}};$scope.deleteFreePropertyMarkers=function(){if(_.isUndefined(google)){return}if($scope.freePropertyMarkers){for(var i=0;i<$scope.freePropertyMarkers.length;i++){$scope.freePropertyMarkers[i].setMap(null)}$scope.freePropertyMarkers=[]}};$scope.deleteTravelLines=function(){if($scope.travelLines){for(var i=0;i<$scope.travelLines.length;i++){$scope.travelLines[i].setMap(null)}$scope.travelLines=[]}};$scope.panels=[{id:"maps-travellog"},{id:"maps-pricelist"}];$scope.showMapsPanel=function(panel){for(var i=0;i<$scope.panels.length;i++){$("#"+$scope.panels[i].id).hide();$("#tab-"+$scope.panels[i].id).removeClass("active")}$("#"+panel).show();$("#tab-"+panel).addClass("active");$scope.activePanel=panel};$scope.showMapsPanel("maps-travellog");$scope.buildTeamInfo();registerPanelUpdateHandler("#panel-map",$scope.updateMap)}"use strict";ferropolyApp.controller("ferrostatsCtrl",ferrostatsCtrl);function ferrostatsCtrl($scope,$http){$scope.rankingList=[];$scope.incomeList=[];$scope.refreshHandler=$scope.showStatsIncome;$scope.refresh=function(){ferroStats.loadChartApi();if($scope.refreshHandler){$scope.refreshHandler()}};$scope.showStatsPossessions=function(){dataStore.getRankingList(function(err,list){if(err){console.log("Error while getting ranking list: "+err.message);$scope.rankingList=[]}else{$scope.rankingList=_.sortBy(_.values(list),function(n){return n.teamName})}ferroStats.drawRankingChart($scope.rankingList,"stats-possessions-chart");$scope.$apply();console.log("Ranking list received");console.log($scope.rankingList)})};$scope.teamIdToTeamName=dataStore.teamIdToTeamName;$scope.showStatsIncome=function(){dataStore.getIncomeList(function(err,list){if(err){console.log("Error while getting income list: "+err.message);$scope.incomeList=[]}else{$scope.incomeList=_.sortBy(_.values(list),function(n){return n.teamName})}ferroStats.drawIncomeChart($scope.incomeList,"stats-income-chart");$scope.$apply();console.log("Ranking list received");console.log($scope.incomeList)})};$scope.showIncomeDetails=function(teamId){var entry=_.find($scope.incomeList,{teamId:teamId});ferroStats.drawIncomeDetailChart(entry.register,"stats-income-chart")};$scope.panels=[{id:"stats-possessions",handler:$scope.showStatsPossessions},{id:"stats-income",handler:$scope.showStatsIncome}];$scope.showStatsPanel=function(panel){for(var i=0;i<$scope.panels.length;i++){$("#"+$scope.panels[i].id).hide().removeClass("active");if($scope.panels[i].id===panel){$scope.panels[i].handler();$scope.refreshHandler=$scope.panels[i].handler}}$("#"+panel).show();$("#tab-"+panel).addClass("active")};$scope.showStatsPanel("stats-possessions")}ferrostatsCtrl.$inject=["$scope","$http"];"use strict";ferropolyApp.controller("chanceCtrl",chanceCtrl);

function chanceCtrl($scope,$http){$scope.entries=[];$scope.teams=dataStore.getTeams();$scope.chancelleryAsset=0;$scope.teamNames={};for(var i=0;i<$scope.teams.length;i++){$scope.teamNames[$scope.teams[i].uuid]=$scope.teams[i].data.name}$scope.updateData=function(){dataStore.updateChancellery(function(){$scope.entries=dataStore.getChancelleryEntries();$scope.chancelleryAsset=dataStore.getChancelleryAsset();$scope.$apply()})};registerPanelUpdateHandler("#panel-chance",$scope.updateData)}chanceCtrl.$inject=["$scope","$http"];"use strict";ferropolyApp.controller("propertiesCtrl",propertiesCtrl);function propertiesCtrl($scope,$http){var travelLogLoaded=false;$scope.properties=[];$scope.listPredicate="pricelist.position";$scope.reverse=false;$scope.currentProperty={};$scope.travelLog=[];$scope.updateProperties=function(){dataStore.updateProperties(undefined,function(){$scope.properties=dataStore.getProperties();if(!$scope.currentProperty.location){$scope.currentProperty=$scope.properties[0]}console.log("propertiesCtrl length: "+$scope.properties.length);$scope.$apply();if(!travelLogLoaded){dataStore.updateTravelLog(undefined,function(){travelLogLoaded=true;$scope.$apply()})}})};$scope.getTeamName=function(teamId){return dataStore.teamIdToTeamName(teamId)};$scope.setCurrentProperty=function(property){$scope.currentProperty=property;$scope.travelLog=dataStore.getTravelLogForProperty(property.uuid)};registerPanelUpdateHandler("#panel-properties",$scope.updateProperties)}propertiesCtrl.$inject=["$scope","$http"];